
GLenum glCheckFramebufferStatus(GLenum target);
GLenum glClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);
GLuint glCreateProgram();
GLuint glCreateShader(GLenum type);
GLsync glFenceSync(GLenum condition, GLbitfield flags);
GLint glGetAttribLocation(GLuint program, const GLchar* name);
GLuint glGetDebugMessageLog(GLuint count, GLsizei bufsize, GLenum* sources, GLenum* types, GLuint* ids, GLenum* severities, GLsizei* lengths, GLchar* messageLog);
GLenum glGetError();
GLint glGetFragDataLocation(GLuint program, const GLchar* name);
GLenum glGetGraphicsResetStatus();
const GLubyte* glGetString(GLenum name);
const GLubyte* glGetStringi(GLenum name, GLuint index);
GLuint glGetUniformBlockIndex(GLuint program, const GLchar* uniformBlockName);
GLint glGetUniformLocation(GLint programObj, const GLchar* name);
realGLboolean glIsBuffer(GLuint buffer);
realGLboolean glIsEnabled(GLenum cap);
realGLboolean glIsFence(GLuint fence);
realGLboolean glIsFramebuffer(GLuint framebuffer);
realGLboolean glIsProgram(GLuint program);
realGLboolean glIsQuery(GLuint id);
realGLboolean glIsRenderbuffer(GLuint renderbuffer);
realGLboolean glIsSampler(GLuint sampler);
realGLboolean glIsShader(GLuint shader);
realGLboolean glIsSync(GLsync sync);
realGLboolean glIsTexture(GLuint texture);
realGLboolean glIsTransformFeedback(GLuint id);
realGLboolean glIsVertexArray(GLuint array);
void* glMapBuffer(GLenum target, GLenum access);
void* glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
realGLboolean glTestFence(GLuint fence);
realGLboolean glUnmapBuffer(GLenum target);


void glActiveTexture(GLenum texture);
void glAttachShader(GLuint program, GLuint shader);
void glBeginQuery(GLenum target, GLuint id);
void glBeginTransformFeedback(GLenum primitiveMode);
void glBindAttribLocation(GLuint program, GLuint index, const GLchar* name);
void glBindBuffer(GLenum target, GLuint buffer);
void glBindBufferBase(GLenum target, GLuint index, GLuint buffer);
void glBindBufferOffset(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
void glBindFramebuffer(GLenum target, GLuint framebuffer);
void glBindRenderbuffer(GLenum target, GLuint renderbuffer);
void glBindSampler(GLuint unit, GLuint sampler);
void glBindTexture(GLenum target, GLuint texture);
void glBindTransformFeedback(GLenum target, GLuint id);
void glBindVertexArray(GLuint array);
void glBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void glBlendEquation(GLenum mode);
void glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);
void glBlendFunc(GLenum sfactor, GLenum dfactor);
void glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
void glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void glBufferData(GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage);
void glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data);
void glClear(GLbitfield mask);
void glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
void glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat* value);
void glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint* value);
void glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint* value);
void glClearColor(GLfloat r, GLfloat g, GLfloat b, GLfloat a);
void glClearDepth(GLclampd depth);
void glClearDepthf(GLclampf depth);
void glClearStencil(GLint s);
void glClientActiveTexture(GLenum texture);
void glColorMask(realGLboolean red, realGLboolean green, realGLboolean blue, realGLboolean alpha);
void glCompileShader(GLuint shader);
void glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid* pixels);
void glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid* data);
void glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid* pixels);
void glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid* data);
void glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
void glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glCullFace(GLenum mode);
void glDebugMessageCallback(GLDEBUGPROC callback, const GLvoid* userParam);
void glDebugMessageControl(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint* ids, realGLboolean enabled);
void glDebugMessageInsert(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar* buf);
void glDeleteBuffers(GLsizei n, const GLuint* buffers);
void glDeleteFences(GLsizei n, const GLuint* fences);
void glDeleteFramebuffers(GLsizei n, const GLuint* ids);
void glDeleteProgram(GLuint program);
void glDeleteQueries(GLsizei n, const GLuint* queries);
void glDeleteRenderbuffers(GLsizei n, const GLuint* ids);
void glDeleteSamplers(GLsizei count, const GLuint* samplers);
void glDeleteShader(GLuint shader);
void glDeleteSync(GLsync sync);
void glDeleteTextures(GLsizei n, const GLuint* textures);
void glDeleteTransformFeedbacks(GLsizei n, const GLuint* ids);
void glDeleteVertexArrays(GLsizei n, const GLuint* arrays);
void glDepthFunc(GLenum func);
void glDepthMask(realGLboolean flag);
void glDepthRange(GLclampd nearVal, GLclampd farVal);
void glDepthRangef(GLclampf nearVal, GLclampf farVal);
void glDetachShader(GLuint program, GLuint shader);
void glDisable(GLenum cap);
void glDisableClientState(GLenum capability);
void glDisableVertexAttribArray(GLuint index);
void glDrawArrays(GLenum mode, GLint first, GLsizei count);
void glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
void glDrawBuffer(GLenum mode);
void glDrawBuffers(GLsizei n, const GLenum* bufs);
void glDrawElements(GLenum mode, GLsizei count, GLenum type, const GLvoid* indices);
void glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const GLvoid* indices, GLsizei primcount);
void glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid* indices);
void glEGLImageTargetRenderbufferStorage(GLenum target, GLeglImage image);
void glEGLImageTargetTexture2D(GLenum target, GLeglImage image);
void glEnable(GLenum cap);
void glEnableClientState(GLenum capability);
void glEnableVertexAttribArray(GLuint index);
void glEndQuery(GLenum target);
void glEndTransformFeedback();
void glFinish();
void glFinishFence(GLuint fence);
void glFlush();
void glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length);
void glFramebufferRenderbuffer(GLenum target, GLenum attachmentPoint, GLenum renderbufferTarget, GLuint renderbuffer);
void glFramebufferTexture2D(GLenum target, GLenum attachmentPoint, GLenum textureTarget, GLuint texture, GLint level);
void glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
void glFrontFace(GLenum mode);
void glGenBuffers(GLsizei n, GLuint* buffers);
void glGenerateMipmap(GLenum target);
void glGenFences(GLsizei n, GLuint* fences);
void glGenFramebuffers(GLsizei n, GLuint* ids);
void glGenQueries(GLsizei n, GLuint* queries);
void glGenRenderbuffers(GLsizei n, GLuint* ids);
void glGenSamplers(GLsizei count, GLuint* samplers);
void glGenTextures(GLsizei n, GLuint* textures);
void glGenTransformFeedbacks(GLsizei n, GLuint* ids);
void glGenVertexArrays(GLsizei n, GLuint* arrays);
void glGetActiveAttrib(GLuint program, GLuint index, GLsizei maxLength, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
void glGetActiveUniform(GLuint program, GLuint index, GLsizei maxLength, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
void glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params);
void glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName);
void glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint* uniformIndices, GLenum pname, GLint* params);
void glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders);
void glGetBooleanv(GLenum pname, realGLboolean* params);
void glGetBufferParameteriv(GLenum target, GLenum pname, GLint* params);
void glGetFenceiv(GLuint fence, GLenum pname, GLint* params);
void glGetFloatv(GLenum pname, GLfloat* params);
void glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint* value);
void glGetInteger64i_v(GLenum target, GLuint index, GLint64* data);
void glGetInteger64v(GLenum pname, GLint64* params);
void glGetIntegeri_v(GLenum param, GLuint index, GLint* values);
void glGetIntegerv(GLenum pname, GLint* params);
void glGetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint* params);
void glGetObjectLabel(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei* length, GLchar* label);
void glGetObjectPtrLabel(const GLvoid* ptr, GLsizei bufSize, GLsizei* length, GLchar* label);
void glGetPointerv(GLenum pname, GLvoid** params);
void glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
void glGetProgramiv(GLuint program, GLenum pname, GLint* param);
void glGetQueryiv(GLenum target, GLenum pname, GLint* params);
void glGetQueryObjecti64v(GLuint id, GLenum pname, GLint64* params);
void glGetQueryObjectiv(GLuint id, GLenum pname, GLint* params);
void glGetQueryObjectui64v(GLuint id, GLenum pname, GLuint64* params);
void glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint* params);
void glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint* value);
void glGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat* params);
void glGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint* params);
void glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
void glGetShaderiv(GLuint shader, GLenum pname, GLint* param);
void glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint* range, GLint* precision);
void glGetShaderSource(GLint obj, GLsizei maxLength, GLsizei* length, GLchar* source);
void glGetSynciv(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei* length, GLint* values);
void glGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLvoid* image);
void glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint* params);
void glGetTexParameterfv(GLenum target, GLenum pname, GLfloat* params);
void glGetTexParameteriv(GLenum target, GLenum pname, GLint* params);
void glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei* size, GLenum* type, GLchar* name);
void glGetUniformfv(GLuint program, GLint location, GLfloat* params);
void glGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar* const* uniformNames, GLuint* uniformIndices);
void glGetUniformiv(GLuint program, GLint location, GLint* params);
void glGetUniformuiv(GLuint program, GLint location, GLuint* params);
void glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat* params);
void glGetVertexAttribIiv(GLuint index, GLenum pname, GLint* params);
void glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint* params);
void glGetVertexAttribiv(GLuint index, GLenum pname, GLint* params);
void glGetVertexAttribPointerv(GLuint index, GLenum pname, GLvoid** pointer);
void glHint(GLenum target, GLenum mode);
void glInvalidateFramebuffer(GLenum target, GLsizei numAttachments, const GLenum* attachments);
void glInvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, const GLenum* attachments, GLint x, GLint y, GLsizei width, GLsizei height);
void glLineWidth(GLfloat width);
void glLinkProgram(GLuint program);
void glLoadIdentity();
void glLoadMatrixd(const GLdouble* matrix);
void glLoadMatrixf(const GLfloat* matrix);
void glMatrixMode(GLenum mode);
void glObjectLabel(GLenum identifier, GLuint name, GLsizei length, const GLchar* label);
void glObjectPtrLabel(const GLvoid* ptr, GLsizei length, const GLchar* label);
void glPauseTransformFeedback();
void glPixelStorei(GLenum pname, GLint param);
void glPointParameterf(GLenum pname, GLfloat param);
void glPolygonOffset(GLfloat factor, GLfloat bias);
void glPopDebugGroup();
void glPushDebugGroup(GLenum source, GLuint id, GLsizei length, const GLchar* message);
void glQueryCounter(GLuint id, GLenum target);
void glReadBuffer(GLenum mode);
void glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
void glRenderbufferStorage(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height);
void glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height);
void glResolveMultisampleFramebufferAPPLE();
void glResumeTransformFeedback();
void glSampleCoverage(GLclampf value, realGLboolean invert);
void glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param);
void glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat* param);
void glSamplerParameteri(GLuint sampler, GLenum pname, GLint param);
void glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint* param);
void glScissor(GLint x, GLint y, GLsizei width, GLsizei height);
void glSetFence(GLuint fence, GLenum condition);
void glShaderSource(GLuint shader, GLsizei count, const GLchar* const* strings, const GLint* lengths);
void glStencilFunc(GLenum func, GLint ref, GLuint mask);
void glStencilFuncSeparate(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
void glStencilMask(GLuint mask);
void glStencilMaskSeparate(GLenum face, GLuint mask);
void glStencilOp(GLenum fail, GLenum zfail, GLenum zpass);
void glStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
void glTexGenf(GLenum coord, GLenum pname, GLfloat param);
void glTexGenfv(GLenum coord, GLenum pname, const GLfloat* param);
void glTexGeni(GLenum coord, GLenum pname, GLint param);
void glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid* pixels);
void glTexImage3D(GLenum target, GLint level, GLenum internalFormat, GLenum width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid* pixels);
void glTexParameterf(GLenum target, GLenum pname, GLfloat param);
void glTexParameteri(GLenum target, GLenum pname, GLint param);
void glTexParameteriv(GLenum target, GLenum pname, const GLint* param);
void glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void glTexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void* pixels);
void glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid* pixels);
void glTextureRangeAPPLE(GLenum target, GLsizei length, GLvoid* pointer);
void glTransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar* const* varyings, GLenum bufferMode);
void glUniform1f(GLint location, GLfloat v0);
void glUniform1fv(GLint location, GLsizei count, const GLfloat* value);
void glUniform1i(GLint location, GLint v0);
void glUniform1iv(GLint location, GLsizei count, const GLint* value);
void glUniform1ui(GLint location, GLuint v0);
void glUniform1uiv(GLint location, GLsizei count, const GLuint* value);
void glUniform2f(GLint location, GLfloat v0, GLfloat v1);
void glUniform2fv(GLint location, GLsizei count, const GLfloat* value);
void glUniform2i(GLint location, GLint v0, GLint v1);
void glUniform2iv(GLint location, GLsizei count, const GLint* value);
void glUniform2ui(GLint location, GLuint v0, GLuint v1);
void glUniform2uiv(GLint location, GLsizei count, const GLuint* value);
void glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void glUniform3fv(GLint location, GLsizei count, const GLfloat* value);
void glUniform3i(GLint location, GLint v0, GLint v1, GLint v2);
void glUniform3iv(GLint location, GLsizei count, const GLint* value);
void glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2);
void glUniform3uiv(GLint location, GLsizei count, const GLuint* value);
void glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void glUniform4fv(GLint location, GLsizei count, const GLfloat* value);
void glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void glUniform4iv(GLint location, GLsizei count, const GLint* value);
void glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void glUniform4uiv(GLint location, GLsizei count, const GLuint* value);
void glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
void glUniformMatrix2fv(GLint location, GLsizei count, realGLboolean transpose, const GLfloat* value);
void glUniformMatrix2x3fv(GLint location, GLsizei count, realGLboolean transpose, const GLfloat* value);
void glUniformMatrix2x4fv(GLint location, GLsizei count, realGLboolean transpose, const GLfloat* value);
void glUniformMatrix3fv(GLint location, GLsizei count, realGLboolean transpose, const GLfloat* value);
void glUniformMatrix3x2fv(GLint location, GLsizei count, realGLboolean transpose, const GLfloat* value);
void glUniformMatrix3x4fv(GLint location, GLsizei count, realGLboolean transpose, const GLfloat* value);
void glUniformMatrix4fv(GLint location, GLsizei count, realGLboolean transpose, const GLfloat* value);
void glUniformMatrix4x2fv(GLint location, GLsizei count, realGLboolean transpose, const GLfloat* value);
void glUniformMatrix4x3fv(GLint location, GLsizei count, realGLboolean transpose, const GLfloat* value);
void glUseProgram(GLuint program);
void glValidateProgram(GLuint program);
void glVertexAttrib1f(GLuint index, GLfloat x);
void glVertexAttrib1fv(GLuint index, const GLfloat* v);
void glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y);
void glVertexAttrib2fv(GLuint index, const GLfloat* v);
void glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void glVertexAttrib3fv(GLuint index, const GLfloat* v);
void glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glVertexAttrib4fv(GLuint index, const GLfloat* v);
void glVertexAttribDivisor(GLuint index, GLuint divisor);
void glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w);
void glVertexAttribI4iv(GLuint index, const GLint* v);
void glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void glVertexAttribI4uiv(GLuint index, const GLuint* v);
void glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid* ptr);
void glVertexAttribPointer(GLuint index, GLint size, GLenum type, realGLboolean normalized, GLsizei stride, const GLvoid* pointer);
void glVertexPointer(GLint size, GLenum type, GLsizei stride, const GLvoid* pointer);
void glViewport(GLint x, GLint y, GLsizei width, GLsizei height);
void glWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);
